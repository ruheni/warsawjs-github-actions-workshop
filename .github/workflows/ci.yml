# name of the workflow
name: CI 

# event trigger
on:
  pull_request:
    branches:
      - main

concurrency:
    group: ci-tests-${{ github.ref }}-1
    cancel-in-progress: true

jobs:
  # each job runs on its own container
  build-and-cache: 
    # define type of machine your action will run on
    runs-on: ubuntu-latest
    # tell the machine what to do – steps
    steps:
      # give the step a name
      - name: Checkout
        # action to use for this step
        uses: actions/checkout@v2
        # parameters used for the action based on the documentation
        with:
         fetch-depth: 0

      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 16
          # caches global yarn installation
          cache: 'yarn'

      - name: Cache node_modules and artifacts
        # cache node_modules after the installation
        uses: actions/cache@v2
        id: yarn-cache
        with:
            # you can save more files here if there are files that are built: e.g. **/dist
            path: |
              /home/runner/.cache/Cypress
              **/node_modules
            key: yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != true
        run: yarn install


  test:
    # define type of machine your action will run on
    needs: build-and-cache
    runs-on: ubuntu-latest
    # tell the machine what to do – steps
    steps:
      # give the step a name
      - name: Checkout
        # action to use for this step
        uses: actions/checkout@v2
        # parameters used for the action based on the documentation
        with:
         fetch-depth: 0

      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn' # if there's a cache hit in the container


      - name: Cache node_modules and artifacts
        uses: actions/cache@v2
        id: yarn-cache
        with:
            path: |
              /home/runner/.cache/Cypress
              **/node_modules
            key: yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != true
        run: yarn install

      - name: Run tests
        run: yarn test:ci
  # => split single job into multiple jobs (parallel steps) – less developer time but will take longer on GH actions
  lint:
    needs: build-and-cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
         fetch-depth: 0

      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn'

      - name: Cache node_modules and artifacts
        uses: actions/cache@v2
        id: yarn-cache
        with:
            path: |
              /home/runner/.cache/Cypress
              **/node_modules
            key: yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != true
        run: yarn install

      - name: Run tests
        run: yarn test:ci
      
      - name: Lint CI 
        run: yarn lint:ci
  e2e:
    needs: build-and-cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
         fetch-depth: 0

      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn'

      - name: Cache node_modules and artifacts
        uses: actions/cache@v2
        id: yarn-cache
        with:
            path: |
              /home/runner/.cache/Cypress
              **/node_modules
            key: yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != true
        run: yarn install

      - name: Run e2e tests
        run: yarn e2e

